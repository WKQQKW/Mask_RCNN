FROM yubaoliu/root:ros-cuda10.0-cudnn7-ubuntu18

RUN apt update \
    &&  apt install -f \
    && apt install -y  libglew-dev \
    libxkbcommon-dev

#Pangolin
RUN git clone https://github.com/stevenlovegrove/Pangolin.git \
    && cd Pangolin \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_BUILD_TYPE=Release \
    && make -j 3 \
    && make install

# update pip
RUN curl -kL https://bootstrap.pypa.io/get-pip.py | python  \
    && curl -kL https://bootstrap.pypa.io/get-pip.py | python3 
 
# coco API
RUN pip2 install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI
RUN pip3 install git+https://github.com/philferriere/cocoapi.git#subdirectory=PythonAPI

# Install mask rcnn dependencies
COPY requirements.txt /root/requirements.txt
RUN  pip2 install --force-reinstall -r /root/requirements.txt --ignore-installed enum34
RUN  pip3 install --force-reinstall -r /root/requirements.txt

# Install mask rcnn
# RUN git clone https://github.com/yubaoliu/Mask_RCNN.git \
#     && cd Mask_RCNN  \
#     && git checkout dev  \
#     && python3 setup.py install

# # Install dependencies
# # Newer CUDA was installed in base image, so rosdep keys of CUDA are skipped
# RUN /bin/bash -c "source /opt/ros/melodic/setup.bash && \
#                   rosdep install --from-paths src -r -y --skip-keys=\"nvidia-cuda-dev nvidia-cuda\""
#                   
# # Build
# RUN /bin/bash -c "source /opt/ros/melodic/setup.bash && \
#                   catkin_make -DCMAKE_BUILD_TYPE=Release"
 
# # Load ROS environment at each run
COPY ./entrypoint.sh /
RUN chmod 755 /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
CMD ["bash"]
